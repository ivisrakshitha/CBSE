{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport IvisLabsLogo from '../components/IvisLabsLogo.vue';\nimport TypewriterText from '../components/TypewriterText.vue';\nexport default {\n  name: 'ContentPage',\n  components: {\n    IvisLabsLogo,\n    TypewriterText\n  },\n  data() {\n    return {\n      isLoading: true,\n      chapterData: {},\n      chapterTitle: '',\n      error: null\n    };\n  },\n  computed: {\n    classNum() {\n      return parseInt(this.$route.params.classNum) || 10;\n    },\n    subject() {\n      // Format the subject name from route param\n      const rawSubject = this.$route.params.subject || '';\n      return rawSubject.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n    },\n    subjectParam() {\n      return this.$route.params.subject || '';\n    },\n    textbookId() {\n      return this.$route.params.textbookId || '';\n    },\n    chapterId() {\n      return this.$route.params.chapterId || '';\n    }\n  },\n  mounted() {\n    this.fetchChapterData();\n  },\n  methods: {\n    async fetchChapterData() {\n      this.isLoading = true;\n      this.error = null;\n      try {\n        // Attempt to fetch the chapter data from a JSON file\n        const chapterId = this.chapterId || 'chapter1'; // Default to chapter1 if not specified\n        const response = await window.fs.readFile(`${chapterId}.json`, {\n          encoding: 'utf8'\n        });\n\n        // Parse the JSON data\n        this.chapterData = JSON.parse(response);\n\n        // Set chapter title from the metadata\n        this.chapterTitle = this.chapterData.chapterMetadata?.title || 'Chapter Content';\n      } catch (error) {\n        console.error('Error fetching chapter data:', error);\n        this.error = `Unable to load the chapter content. Please try again later. (${error.message})`;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["IvisLabsLogo","TypewriterText","name","components","data","isLoading","chapterData","chapterTitle","error","computed","classNum","parseInt","$route","params","subject","rawSubject","split","map","word","charAt","toUpperCase","slice","join","subjectParam","textbookId","chapterId","mounted","fetchChapterData","methods","response","window","fs","readFile","encoding","JSON","parse","chapterMetadata","title","console","message","goBack","$router","go"],"sources":["/home/johnaic-admin/IVIS LABS/CBSE/cbse/src/views/ContentPage.vue"],"sourcesContent":["<!-- src/views/ContentPage.vue -->\n  <template>\n    <div class=\"content-page\">\n      <nav class=\"navbar\">\n        <router-link to=\"/\" class=\"nav-logo\">\n          <IvisLabsLogo />\n        </router-link>\n        <div class=\"nav-pulse\">PULSE</div>\n        <div class=\"breadcrumbs\">\n          <router-link to=\"/cbse\">CBSE</router-link> / \n          <router-link :to=\"`/class/${classNum}/subjects`\">Class {{ classNum }}</router-link> /\n          <router-link :to=\"`/class/${classNum}/subject/${subjectParam}`\">{{ subject }}</router-link> /\n          <span>{{ chapterTitle }}</span>\n        </div>\n      </nav>\n      \n      <header>\n        <h1>{{ chapterTitle }}</h1>\n        <div class=\"chapter-meta\">\n          <span class=\"subject-tag\">{{ subject }}</span>\n          <span class=\"grade-tag\">Class {{ classNum }}</span>\n          <span v-if=\"chapterData.chapterMetadata && chapterData.chapterMetadata.strand\" class=\"strand-tag\">{{ chapterData.chapterMetadata.strand }}</span>\n        </div>\n      </header>\n      \n      <div class=\"content-container\" v-if=\"isLoading\">\n        <div class=\"loading-indicator\">\n          <div class=\"spinner\"></div>\n          <p>Loading chapter content...</p>\n        </div>\n      </div>\n      \n      <div class=\"content-container\" v-else-if=\"error\">\n        <div class=\"error-message\">\n          <div class=\"error-icon\">!</div>\n          <h2>Failed to load chapter content</h2>\n          <p>{{ error }}</p>\n          <button @click=\"goBack\" class=\"back-button\">Go Back</button>\n        </div>\n      </div>\n      \n      <div class=\"content-container\" v-else>\n        <!-- Metadata Card -->\n        <div class=\"content-card metadata-card\" v-if=\"chapterData.chapterMetadata\">\n          <h2>Chapter Overview</h2>\n          <TypewriterText :text=\"'This chapter covers ' + chapterData.chapterMetadata.title + ' for Class ' + chapterData.chapterMetadata.grade + '.'\"></TypewriterText>\n          \n          <div v-if=\"chapterData.chapterMetadata.learningObjectives && chapterData.chapterMetadata.learningObjectives.length > 0\">\n            <h3>Learning Objectives</h3>\n            <ul class=\"objectives-list\">\n              <li v-for=\"(objective, index) in chapterData.chapterMetadata.learningObjectives\" :key=\"index\">\n                <TypewriterText :text=\"objective\"></TypewriterText>\n              </li>\n            </ul>\n          </div>\n          \n          <div v-if=\"chapterData.chapterMetadata.prerequisites && chapterData.chapterMetadata.prerequisites.length > 0\">\n            <h3>Prerequisites</h3>\n            <ul class=\"prerequisites-list\">\n              <li v-for=\"(prerequisite, index) in chapterData.chapterMetadata.prerequisites\" :key=\"index\">\n                <TypewriterText :text=\"prerequisite\"></TypewriterText>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <!-- Section Cards -->\n        <div v-for=\"(section, index) in chapterData.sections\" :key=\"index\" class=\"content-card section-card\">\n          <h2>{{ section.title }}</h2>\n          <div class=\"section-summary\">\n            <TypewriterText :text=\"section.summary\"></TypewriterText>\n          </div>\n          \n          <!-- Key Concepts -->\n          <div v-if=\"section.keyConcepts && section.keyConcepts.length > 0\" class=\"key-concepts\">\n            <h3>Key Concepts</h3>\n            <div v-for=\"(concept, cIndex) in section.keyConcepts\" :key=\"cIndex\" class=\"concept-item\">\n              <h4>{{ concept.name }}</h4>\n              <TypewriterText :text=\"concept.description\"></TypewriterText>\n              \n              <div v-if=\"concept.properties && concept.properties.length > 0\" class=\"concept-properties\">\n                <h5>Properties:</h5>\n                <ul>\n                  <li v-for=\"(property, pIndex) in concept.properties\" :key=\"pIndex\">\n                    <TypewriterText :text=\"property\"></TypewriterText>\n                  </li>\n                </ul>\n              </div>\n              \n              <div v-if=\"concept.examples && concept.examples.length > 0\" class=\"concept-examples\">\n                <h5>Examples:</h5>\n                <ul>\n                  <li v-for=\"(example, eIndex) in concept.examples\" :key=\"eIndex\">\n                    <TypewriterText :text=\"example\"></TypewriterText>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Theorems -->\n          <div v-if=\"section.theorems && section.theorems.length > 0\" class=\"theorems\">\n            <h3>Theorems</h3>\n            <div v-for=\"(theorem, tIndex) in section.theorems\" :key=\"tIndex\" class=\"theorem-item\">\n              <div class=\"theorem-statement\">\n                <TypewriterText :text=\"theorem.statement\"></TypewriterText>\n              </div>\n              <div class=\"theorem-explanation\" v-if=\"theorem.explanation\">\n                <h5>Explanation:</h5>\n                <TypewriterText :text=\"theorem.explanation\"></TypewriterText>\n              </div>\n              <div class=\"theorem-proof\" v-if=\"theorem.proof\">\n                <h5>Proof:</h5>\n                <TypewriterText :text=\"theorem.proof\"></TypewriterText>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Examples -->\n          <div v-if=\"section.examples && section.examples.length > 0\" class=\"examples\">\n            <h3>Examples</h3>\n            <div v-for=\"(example, eIndex) in section.examples\" :key=\"eIndex\" class=\"example-item\">\n              <div class=\"example-content\">\n                <TypewriterText :text=\"example.content\"></TypewriterText>\n              </div>\n              <div class=\"example-context\" v-if=\"example.context\">\n                <TypewriterText :text=\"'Context: ' + example.context\"></TypewriterText>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Exercises -->\n          <div v-if=\"section.exercises && section.exercises.length > 0\" class=\"exercises\">\n            <h3>Exercises</h3>\n            <div v-for=\"(exercise, exIndex) in section.exercises\" :key=\"exIndex\" class=\"exercise-item\">\n              <div class=\"exercise-type\" v-if=\"exercise.type\">Type: {{ exercise.type }}</div>\n              <div class=\"exercise-problem\">\n                <TypewriterText :text=\"exercise.problem\"></TypewriterText>\n              </div>\n              <div class=\"exercise-difficulty\" v-if=\"exercise.difficulty\">\n                Difficulty: <span :class=\"'difficulty-' + exercise.difficulty.toLowerCase()\">{{ exercise.difficulty }}</span>\n              </div>\n              <div class=\"exercise-skill\" v-if=\"exercise.skillTargeted\">\n                <TypewriterText :text=\"'Skill: ' + exercise.skillTargeted\"></TypewriterText>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Teaching Resources -->\n        <div class=\"content-card resources-card\" v-if=\"chapterData.teachingResources\">\n          <h2>Teaching Resources</h2>\n          \n          <!-- Key Vocabulary -->\n          <div v-if=\"chapterData.teachingResources.keyVocabulary && chapterData.teachingResources.keyVocabulary.length > 0\" class=\"key-vocabulary\">\n            <h3>Key Vocabulary</h3>\n            <div v-for=\"(term, vIndex) in chapterData.teachingResources.keyVocabulary\" :key=\"vIndex\" class=\"vocabulary-item\">\n              <h4>{{ term.term }} <span v-if=\"term.symbol\" class=\"term-symbol\">{{ term.symbol }}</span></h4>\n              <TypewriterText :text=\"term.definition\"></TypewriterText>\n            </div>\n          </div>\n          \n          <!-- Common Misconceptions -->\n          <div v-if=\"chapterData.teachingResources.commonMisconceptions && chapterData.teachingResources.commonMisconceptions.length > 0\" class=\"misconceptions\">\n            <h3>Common Misconceptions</h3>\n            <div v-for=\"(misconception, mIndex) in chapterData.teachingResources.commonMisconceptions\" :key=\"mIndex\" class=\"misconception-item\">\n              <h4 class=\"misconception-title\">Misconception:</h4>\n              <TypewriterText :text=\"misconception.misconception\"></TypewriterText>\n              <h4 class=\"correction-title\">Correction:</h4>\n              <TypewriterText :text=\"misconception.correction\"></TypewriterText>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Practical Applications -->\n        <div class=\"content-card applications-card\" v-if=\"chapterData.practicalApplications && chapterData.practicalApplications.length > 0\">\n          <h2>Practical Applications</h2>\n          <div v-for=\"(application, aIndex) in chapterData.practicalApplications\" :key=\"aIndex\" class=\"application-item\">\n            <h3>{{ application.context }}</h3>\n            <TypewriterText :text=\"application.description\"></TypewriterText>\n          </div>\n        </div>\n        \n        <!-- Mathematical Heritage -->\n        <div class=\"content-card heritage-card\" v-if=\"chapterData.mathematicalHeritage\">\n          <h2>Mathematical Heritage</h2>\n          <div v-if=\"chapterData.mathematicalHeritage.historicalContext\" class=\"historical-context\">\n            <h3>Historical Context</h3>\n            <TypewriterText :text=\"chapterData.mathematicalHeritage.historicalContext\"></TypewriterText>\n          </div>\n          \n          <div v-if=\"chapterData.mathematicalHeritage.indianContributions && chapterData.mathematicalHeritage.indianContributions.length > 0\" class=\"indian-contributions\">\n            <h3>Indian Contributions</h3>\n            <ul>\n              <li v-for=\"(contribution, cIndex) in chapterData.mathematicalHeritage.indianContributions\" :key=\"cIndex\">\n                <TypewriterText :text=\"contribution\"></TypewriterText>\n              </li>\n            </ul>\n          </div>\n          \n          <div v-if=\"chapterData.mathematicalHeritage.culturalSignificance\" class=\"cultural-significance\">\n            <h3>Cultural Significance</h3>\n            <TypewriterText :text=\"chapterData.mathematicalHeritage.culturalSignificance\"></TypewriterText>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import IvisLabsLogo from '../components/IvisLabsLogo.vue'\n  import TypewriterText from '../components/TypewriterText.vue'\n  \n  export default {\n    name: 'ContentPage',\n    components: {\n      IvisLabsLogo,\n      TypewriterText\n    },\n    data() {\n      return {\n        isLoading: true,\n        chapterData: {},\n        chapterTitle: '',\n        error: null\n      }\n    },\n    computed: {\n      classNum() {\n        return parseInt(this.$route.params.classNum) || 10;\n      },\n      subject() {\n        // Format the subject name from route param\n        const rawSubject = this.$route.params.subject || '';\n        return rawSubject\n          .split('-')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ');\n      },\n      subjectParam() {\n        return this.$route.params.subject || '';\n      },\n      textbookId() {\n        return this.$route.params.textbookId || '';\n      },\n      chapterId() {\n        return this.$route.params.chapterId || '';\n      }\n    },\n    mounted() {\n      this.fetchChapterData();\n    },\n    methods: {\n      async fetchChapterData() {\n        this.isLoading = true;\n        this.error = null;\n        \n        try {\n          // Attempt to fetch the chapter data from a JSON file\n          const chapterId = this.chapterId || 'chapter1'; // Default to chapter1 if not specified\n          const response = await window.fs.readFile(`${chapterId}.json`, { encoding: 'utf8' });\n          \n          // Parse the JSON data\n          this.chapterData = JSON.parse(response);\n          \n          // Set chapter title from the metadata\n          this.chapterTitle = this.chapterData.chapterMetadata?.title || 'Chapter Content';\n        } catch (error) {\n          console.error('Error fetching chapter data:', error);\n          this.error = `Unable to load the chapter content. Please try again later. (${error.message})`;\n        } finally {\n          this.isLoading = false;\n        }\n      },\n      \n      goBack() {\n        this.$router.go(-1);\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .content-page {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 40px 20px;\n    background-color: #121212;\n    min-height: 100vh;\n    color: #e0e0e0;\n  }\n  \n  .navbar {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    margin-bottom: 30px;\n    border-bottom: 1px solid #2c2c2c;\n  }\n  \n  .nav-logo {\n    text-decoration: none;\n  }\n  \n  .nav-pulse {\n    margin-left: 15px;\n    font-size: 1.8rem;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  \n  .breadcrumbs {\n    margin-left: auto;\n    font-size: 0.9rem;\n    color: #b0b0b0;\n  }\n  \n  .breadcrumbs a {\n    color: #17b5b5;\n    text-decoration: none;\n  }\n  \n  .breadcrumbs a:hover {\n    text-decoration: underline;\n  }\n  \n  header {\n    text-align: center;\n    margin-bottom: 50px;\n  }\n  \n  header h1 {\n    font-size: 2.5rem;\n    color: #17b5b5;\n    margin-bottom: 15px;\n  }\n  \n  .chapter-meta {\n    display: flex;\n    justify-content: center;\n    gap: 15px;\n    flex-wrap: wrap;\n  }\n  \n  .chapter-meta span {\n    padding: 5px 12px;\n    border-radius: 20px;\n    font-size: 0.9rem;\n    font-weight: 500;\n  }\n  \n  .subject-tag {\n    background-color: rgba(23, 181, 181, 0.2);\n    color: #17b5b5;\n  }\n  \n  .grade-tag {\n    background-color: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n  }\n  \n  .strand-tag {\n    background-color: rgba(255, 255, 255, 0.05);\n    color: #b0b0b0;\n  }\n  \n  .content-container {\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n  }\n  \n  .content-card {\n    background: #1e1e1e;\n    border-radius: 12px;\n    padding: 30px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    border: 1px solid #2c2c2c;\n  }\n  \n  .content-card h2 {\n    color: #17b5b5;\n    margin-bottom: 20px;\n    font-size: 1.8rem;\n    padding-bottom: 15px;\n    border-bottom: 1px solid #2c2c2c;\n  }\n  \n  .content-card h3 {\n    color: #ffffff;\n    margin: 25px 0 15px;\n    font-size: 1.4rem;\n  }\n  \n  .content-card h4 {\n    color: #17b5b5;\n    margin: 15px 0 10px;\n    font-size: 1.2rem;\n  }\n  \n  .content-card h5 {\n    color: #b0b0b0;\n    margin: 10px 0 5px;\n    font-size: 1.1rem;\n    font-weight: 500;\n  }\n  \n  .section-summary {\n    margin-bottom: 25px;\n    line-height: 1.6;\n    color: #e0e0e0;\n  }\n  \n  .key-concepts, .theorems, .examples, .exercises, \n  .key-vocabulary, .misconceptions, .application-item {\n    margin-top: 25px;\n    padding-top: 15px;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  .concept-item, .theorem-item, .example-item, \n  .exercise-item, .vocabulary-item, .misconception-item {\n    margin-bottom: 25px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n  }\n  \n  .concept-item:last-child, .theorem-item:last-child, \n  .example-item:last-child, .exercise-item:last-child,\n  .vocabulary-item:last-child, .misconception-item:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n  \n  ul {\n    padding-left: 20px;\n    margin: 10px 0;\n  }\n  \n  li {\n    margin-bottom: 10px;\n    line-height: 1.5;\n  }\n  \n  .exercise-type, .exercise-difficulty, .exercise-skill {\n    margin-top: 8px;\n    font-size: 0.9rem;\n    color: #b0b0b0;\n  }\n  \n  .difficulty-basic {\n    color: #4CAF50;\n  }\n  \n  .difficulty-intermediate {\n    color: #FFC107;\n  }\n  \n  .difficulty-advanced {\n    color: #F44336;\n  }\n  \n  .theorem-statement {\n    padding: 15px;\n    background-color: rgba(23, 181, 181, 0.08);\n    border-radius: 8px;\n    margin-bottom: 15px;\n  }\n  \n  .loading-indicator {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 300px;\n  }\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 4px solid rgba(23, 181, 181, 0.1);\n    border-left-color: #17b5b5;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 20px;\n  }\n  \n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  \n  .misconception-title {\n    color: #f44336;\n  }\n  \n  .correction-title {\n    color: #4CAF50;\n  }\n  \n  .historical-context, .indian-contributions, .cultural-significance {\n    margin-bottom: 30px;\n  }\n  \n  .objectives-list li, .prerequisites-list li {\n    margin-bottom: 12px;\n  }\n  \n  @media (max-width: 768px) {\n    .breadcrumbs {\n      display: none;\n    }\n    \n    .content-card {\n      padding: 20px;\n    }\n    \n    header h1 {\n      font-size: 2rem;\n    }\n    \n    .content-card h2 {\n      font-size: 1.5rem;\n    }\n    \n    .content-card h3 {\n      font-size: 1.3rem;\n    }\n  }\n  .error-message {\n    text-align: center;\n    padding: 50px 20px;\n    background-color: #1e1e1e;\n    border-radius: 12px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    border: 1px solid #2c2c2c;\n  }\n  \n  .error-icon {\n    width: 60px;\n    height: 60px;\n    margin: 0 auto 20px;\n    background-color: rgba(244, 67, 54, 0.1);\n    color: #F44336;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 2rem;\n    font-weight: bold;\n  }\n  \n  .error-message h2 {\n    color: #F44336;\n    margin-bottom: 15px;\n  }\n  \n  .error-message p {\n    color: #b0b0b0;\n    margin-bottom: 25px;\n  }\n  \n  .back-button {\n    background-color: #17b5b5;\n    color: #121212;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n  }\n  \n  .back-button:hover {\n    background-color: #1ec7c7;\n  }\n  </style>"],"mappings":";;AAkNE,OAAOA,YAAW,MAAO,gCAA+B;AACxD,OAAOC,cAAa,MAAO,kCAAiC;AAE5D,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVH,YAAY;IACZC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,CAAC,CAAC;MACfC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAOC,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACH,QAAQ,KAAK,EAAE;IACpD,CAAC;IACDI,OAAOA,CAAA,EAAG;MACR;MACA,MAAMC,UAAS,GAAI,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC,OAAM,IAAK,EAAE;MACnD,OAAOC,UAAS,CACbC,KAAK,CAAC,GAAG,EACTC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,EACxDC,IAAI,CAAC,GAAG,CAAC;IACd,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACX,MAAM,CAACC,MAAM,CAACC,OAAM,IAAK,EAAE;IACzC,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACZ,MAAM,CAACC,MAAM,CAACW,UAAS,IAAK,EAAE;IAC5C,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACb,MAAM,CAACC,MAAM,CAACY,SAAQ,IAAK,EAAE;IAC3C;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI,CAACtB,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACG,KAAI,GAAI,IAAI;MAEjB,IAAI;QACF;QACA,MAAMiB,SAAQ,GAAI,IAAI,CAACA,SAAQ,IAAK,UAAU,EAAE;QAChD,MAAMI,QAAO,GAAI,MAAMC,MAAM,CAACC,EAAE,CAACC,QAAQ,CAAC,GAAGP,SAAS,OAAO,EAAE;UAAEQ,QAAQ,EAAE;QAAO,CAAC,CAAC;;QAEpF;QACA,IAAI,CAAC3B,WAAU,GAAI4B,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC;;QAEvC;QACA,IAAI,CAACtB,YAAW,GAAI,IAAI,CAACD,WAAW,CAAC8B,eAAe,EAAEC,KAAI,IAAK,iBAAiB;MAClF,EAAE,OAAO7B,KAAK,EAAE;QACd8B,OAAO,CAAC9B,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAI,CAACA,KAAI,GAAI,gEAAgEA,KAAK,CAAC+B,OAAO,GAAG;MAC/F,UAAU;QACR,IAAI,CAAClC,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IAEDmC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}