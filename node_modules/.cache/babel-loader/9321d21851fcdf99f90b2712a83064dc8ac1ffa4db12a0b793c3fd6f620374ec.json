{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderSlot as _renderSlot, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-toggle-icon\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"collapsible-card\", {\n      'card-expanded': $data.isExpanded\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"card-header\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleExpand && $options.toggleExpand(...args))\n  }, [_createElementVNode(\"h2\", null, _toDisplayString($props.title), 1), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    class: _normalizeClass({\n      'rotate-icon': $data.isExpanded\n    })\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"polyline\", {\n    points: \"6 9 12 15 18 9\"\n  }, null, -1)]), 2))])]), $data.isExpanded ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"card-content\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)])) : _createCommentVNode(\"\", true)], 2);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$data","isExpanded","_createElementVNode","onClick","_cache","args","$options","toggleExpand","_toDisplayString","$props","title","_hoisted_1","xmlns","width","height","viewBox","fill","stroke","points","key","_withModifiers","_renderSlot","_ctx","$slots","undefined","_createCommentVNode"],"sources":["/home/johnaic-admin/IVIS LABS/CBSE/cbse/src/components/CollapsibleCard.vue"],"sourcesContent":["<!-- src/components/CollapsibleCard.vue -->\n<template>\n    <div class=\"collapsible-card\" :class=\"{'card-expanded': isExpanded}\">\n      <div class=\"card-header\" @click=\"toggleExpand\">\n        <h2>{{ title }}</h2>\n        <div class=\"card-toggle-icon\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" :class=\"{'rotate-icon': isExpanded}\">\n            <polyline points=\"6 9 12 15 18 9\"></polyline>\n          </svg>\n        </div>\n      </div>\n      \n      <div class=\"card-content\" v-if=\"isExpanded\" @click.stop>\n        <slot></slot>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'CollapsibleCard',\n    props: {\n      title: {\n        type: String,\n        required: true\n      },\n      initiallyExpanded: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        isExpanded: this.initiallyExpanded\n      }\n    },\n    methods: {\n      toggleExpand() {\n        this.isExpanded = !this.isExpanded;\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .collapsible-card {\n    background: #1e1e1e;\n    border-radius: 12px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    border: 1px solid #2c2c2c;\n    margin-bottom: 20px;\n    transition: all 0.3s ease;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  \n  .collapsible-card.card-expanded {\n    border-color: #17b5b5;\n    box-shadow: 0 8px 25px rgba(23, 181, 181, 0.15);\n  }\n  \n  .card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px 30px;\n    transition: background-color 0.3s ease;\n  }\n  \n  .collapsible-card.card-expanded .card-header {\n    border-bottom: 1px solid #2c2c2c;\n  }\n  \n  .card-header h2 {\n    color: #17b5b5;\n    margin: 0;\n    font-size: 1.8rem;\n    transition: color 0.3s ease;\n  }\n  \n  .card-toggle-icon {\n    color: #17b5b5;\n  }\n  \n  .card-toggle-icon svg {\n    transition: transform 0.3s ease;\n  }\n  \n  .rotate-icon {\n    transform: rotate(-180deg);\n  }\n  \n  .card-content {\n    padding: 30px;\n    animation: fadeIn 0.5s ease;\n  }\n  \n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .collapsible-card:hover {\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n  }\n  \n  .collapsible-card.card-expanded:hover {\n    box-shadow: 0 8px 25px rgba(23, 181, 181, 0.15);\n  }\n  \n  @media (max-width: 768px) {\n    .card-header {\n      padding: 15px 20px;\n    }\n    \n    .card-header h2 {\n      font-size: 1.5rem;\n    }\n    \n    .card-content {\n      padding: 20px;\n    }\n  }\n  </style>"],"mappings":";;EAKaA,KAAK,EAAC;AAAkB;;uBAHjCC,mBAAA,CAaM;IAbDD,KAAK,EAFdE,eAAA,EAEe,kBAAkB;MAAA,iBAA2BC,KAAA,CAAAC;IAAU;MAChEC,mBAAA,CAOM;IAPDL,KAAK,EAAC,aAAa;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC3CH,mBAAA,CAAoB,YAAAM,gBAAA,CAAbC,MAAA,CAAAC,KAAK,OACZR,mBAAA,CAIM,OAJNS,UAIM,I,cAHJb,mBAAA,CAEM;IAFDc,KAAK,EAAC,4BAA4B;IAACC,KAAK,EAAC,IAAI;IAACC,MAAM,EAAC,IAAI;IAACC,OAAO,EAAC,WAAW;IAACC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,cAAc;IAAC,cAAY,EAAC,GAAG;IAAC,gBAAc,EAAC,OAAO;IAAC,iBAAe,EAAC,OAAO;IAAEpB,KAAK,EANrME,eAAA;MAAA,eAMuNC,KAAA,CAAAC;IAAU;gCACrNC,mBAAA,CAA6C;IAAnCgB,MAAM,EAAC;EAAgB,a,YAKPlB,KAAA,CAAAC,UAAU,I,cAA1CH,mBAAA,CAEM;IAdZqB,GAAA;IAYWtB,KAAK,EAAC,cAAc;IAAoBM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAZxDgB,cAAA,CAYkD,QAAW;MACrDC,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q,KAbrBC,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}