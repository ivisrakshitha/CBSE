{"ast":null,"code":"require(\"core-js/modules/es.iterator.constructor.js\");\nrequire(\"core-js/modules/es.iterator.map.js\");\n// src/services/AIService.js\nconst fetch = require(\"node-fetch\");\nclass AIService {\n  constructor() {\n    this.openwebuiUrl = process.env.VUE_APP_OPENWEBUI_URL;\n    this.apiKey = process.env.VUE_APP_OPENWEBUI_API_KEY;\n  }\n\n  // Generate AI exercises for a specific section\n  async generateExercises(sectionData, chapterMetadata) {\n    try {\n      if (this.openwebuiUrl && this.apiKey) {\n        const response = await this.queryOpenWebUI(sectionData, chapterMetadata // ✅ Comma added here\n        );\n        if (response && this.isResponseValid(response)) {\n          return {\n            content: response,\n            source: \"openwebui\",\n            confidence: 0.9\n          };\n        }\n      }\n    } catch (error) {\n      console.warn(\"OpenWebUI failed, falling back to template:\", error.message);\n    }\n\n    // Fallback to template responses\n    const fallbackResponse = this.generateFallbackExercises(sectionData, chapterMetadata);\n    return {\n      content: fallbackResponse,\n      source: \"fallback\",\n      confidence: 0.7\n    };\n  }\n\n  // Query OpenWebUI API for exercise generation\n  async queryOpenWebUI(sectionData, chapterMetadata) {\n    const systemPrompt = this.getExerciseSystemPrompt();\n    const contextPrompt = this.buildExerciseContextPrompt(sectionData, chapterMetadata);\n    const response = await fetch(this.openwebuiUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"llama2\",\n        messages: [{\n          role: \"system\",\n          content: systemPrompt\n        }, {\n          role: \"user\",\n          content: contextPrompt\n        }],\n        temperature: 0.3,\n        max_tokens: 500,\n        stream: false\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`OpenWebUI API error: ${response.status}`);\n    }\n    const data = await response.json();\n    return data.choices?.[0]?.message?.content || data.response;\n  }\n\n  // System prompt for exercise generation\n  getExerciseSystemPrompt() {\n    return `You are an expert mathematics teacher creating exercises for CBSE students. \nGenerate exercises that are:\n1. Appropriate for the given class level\n2. Aligned with the section's key concepts\n3. Progressive in difficulty (Basic, Intermediate, Advanced)\n4. Include a mix of problem types\n5. Focused on skill development\n\nFormat your response as a JSON array of exercise objects with the following structure:\n{\n  \"type\": \"string\",\n  \"problem\": \"string\",\n  \"difficulty\": \"Basic|Intermediate|Advanced\",\n  \"skillTargeted\": \"string\",\n  \"hint\": \"string (optional)\"\n}\n\nGenerate 3-5 exercises per section.`;\n  }\n\n  // Build context prompt for exercise generation\n  buildExerciseContextPrompt(sectionData, chapterMetadata) {\n    return `Chapter: ${chapterMetadata.title}\nSubject: ${chapterMetadata.subject}\nClass: ${chapterMetadata.grade}\nSection: ${sectionData.title}\n\nSection Summary: ${sectionData.summary}\n\nKey Concepts in this section:\n${sectionData.keyConcepts?.map(concept => `- ${concept.name}: ${concept.description}`).join(\"\\n\") || \"None\"}\n\nTheorems in this section:\n${sectionData.theorems?.map(theorem => `- ${theorem.statement}`).join(\"\\n\") || \"None\"}\n\nExamples provided:\n${sectionData.examples?.map(example => `- ${example.content}`).join(\"\\n\") || \"None\"}\n\nBased on this information, generate appropriate exercises for Class ${chapterMetadata.grade} students studying ${sectionData.title}.`;\n  }\n\n  // Generate fallback exercises when AI is unavailable\n  generateFallbackExercises(sectionData, chapterMetadata) {\n    const fallbackExercises = [{\n      type: \"Practice Problem\",\n      problem: `Solve problems related to ${sectionData.title}`,\n      difficulty: \"Basic\",\n      skillTargeted: \"Understanding basic concepts\",\n      hint: \"Review the key concepts in this section\"\n    }, {\n      type: \"Application\",\n      problem: `Apply the concepts from ${sectionData.title} to solve real-world problems`,\n      difficulty: \"Intermediate\",\n      skillTargeted: \"Practical application\",\n      hint: \"Connect the theory to practical situations\"\n    }, {\n      type: \"Problem Solving\",\n      problem: `Create and solve advanced problems using ${sectionData.title}`,\n      difficulty: \"Advanced\",\n      skillTargeted: \"Critical thinking and problem solving\",\n      hint: \"Combine multiple concepts for complex solutions\"\n    }];\n    return JSON.stringify(fallbackExercises);\n  }\n\n  // Validate AI response\n  isResponseValid(response) {\n    try {\n      const parsed = JSON.parse(response);\n      return Array.isArray(parsed) && parsed.length > 0;\n    } catch {\n      return false;\n    }\n  }\n}\nmodule.exports = AIService;","map":{"version":3,"names":["fetch","require","AIService","constructor","openwebuiUrl","process","env","VUE_APP_OPENWEBUI_URL","apiKey","VUE_APP_OPENWEBUI_API_KEY","generateExercises","sectionData","chapterMetadata","response","queryOpenWebUI","isResponseValid","content","source","confidence","error","console","warn","message","fallbackResponse","generateFallbackExercises","systemPrompt","getExerciseSystemPrompt","contextPrompt","buildExerciseContextPrompt","method","headers","Authorization","body","JSON","stringify","model","messages","role","temperature","max_tokens","stream","ok","Error","status","data","json","choices","title","subject","grade","summary","keyConcepts","map","concept","name","description","join","theorems","theorem","statement","examples","example","fallbackExercises","type","problem","difficulty","skillTargeted","hint","parsed","parse","Array","isArray","length","module","exports"],"sources":["F:/IVIS_PROJECTS/2025/JULY/cbse/src/services/AIService.js"],"sourcesContent":["// src/services/AIService.js\r\nconst fetch = require(\"node-fetch\");\r\n\r\nclass AIService {\r\n  constructor() {\r\n    this.openwebuiUrl = process.env.VUE_APP_OPENWEBUI_URL;\r\n    this.apiKey = process.env.VUE_APP_OPENWEBUI_API_KEY;\r\n  }\r\n\r\n  // Generate AI exercises for a specific section\r\n  async generateExercises(sectionData, chapterMetadata) {\r\n    try {\r\n      if (this.openwebuiUrl && this.apiKey) {\r\n        const response = await this.queryOpenWebUI(\r\n          sectionData,\r\n          chapterMetadata // ✅ Comma added here\r\n        );\r\n\r\n        if (response && this.isResponseValid(response)) {\r\n          return {\r\n            content: response,\r\n            source: \"openwebui\",\r\n            confidence: 0.9,\r\n          };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn(\r\n        \"OpenWebUI failed, falling back to template:\",\r\n        error.message\r\n      );\r\n    }\r\n\r\n    // Fallback to template responses\r\n    const fallbackResponse = this.generateFallbackExercises(\r\n      sectionData,\r\n      chapterMetadata\r\n    );\r\n    return {\r\n      content: fallbackResponse,\r\n      source: \"fallback\",\r\n      confidence: 0.7,\r\n    };\r\n  }\r\n\r\n  // Query OpenWebUI API for exercise generation\r\n  async queryOpenWebUI(sectionData, chapterMetadata) {\r\n    const systemPrompt = this.getExerciseSystemPrompt();\r\n    const contextPrompt = this.buildExerciseContextPrompt(\r\n      sectionData,\r\n      chapterMetadata\r\n    );\r\n\r\n    const response = await fetch(this.openwebuiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.apiKey}`,\r\n      },\r\n      body: JSON.stringify({\r\n        model: \"llama2\",\r\n        messages: [\r\n          {\r\n            role: \"system\",\r\n            content: systemPrompt,\r\n          },\r\n          {\r\n            role: \"user\",\r\n            content: contextPrompt,\r\n          },\r\n        ],\r\n        temperature: 0.3,\r\n        max_tokens: 500,\r\n        stream: false,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`OpenWebUI API error: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.choices?.[0]?.message?.content || data.response;\r\n  }\r\n\r\n  // System prompt for exercise generation\r\n  getExerciseSystemPrompt() {\r\n    return `You are an expert mathematics teacher creating exercises for CBSE students. \r\nGenerate exercises that are:\r\n1. Appropriate for the given class level\r\n2. Aligned with the section's key concepts\r\n3. Progressive in difficulty (Basic, Intermediate, Advanced)\r\n4. Include a mix of problem types\r\n5. Focused on skill development\r\n\r\nFormat your response as a JSON array of exercise objects with the following structure:\r\n{\r\n  \"type\": \"string\",\r\n  \"problem\": \"string\",\r\n  \"difficulty\": \"Basic|Intermediate|Advanced\",\r\n  \"skillTargeted\": \"string\",\r\n  \"hint\": \"string (optional)\"\r\n}\r\n\r\nGenerate 3-5 exercises per section.`;\r\n  }\r\n\r\n  // Build context prompt for exercise generation\r\n  buildExerciseContextPrompt(sectionData, chapterMetadata) {\r\n    return `Chapter: ${chapterMetadata.title}\r\nSubject: ${chapterMetadata.subject}\r\nClass: ${chapterMetadata.grade}\r\nSection: ${sectionData.title}\r\n\r\nSection Summary: ${sectionData.summary}\r\n\r\nKey Concepts in this section:\r\n${\r\n  sectionData.keyConcepts\r\n    ?.map((concept) => `- ${concept.name}: ${concept.description}`)\r\n    .join(\"\\n\") || \"None\"\r\n}\r\n\r\nTheorems in this section:\r\n${\r\n  sectionData.theorems?.map((theorem) => `- ${theorem.statement}`).join(\"\\n\") ||\r\n  \"None\"\r\n}\r\n\r\nExamples provided:\r\n${\r\n  sectionData.examples?.map((example) => `- ${example.content}`).join(\"\\n\") ||\r\n  \"None\"\r\n}\r\n\r\nBased on this information, generate appropriate exercises for Class ${\r\n      chapterMetadata.grade\r\n    } students studying ${sectionData.title}.`;\r\n  }\r\n\r\n  // Generate fallback exercises when AI is unavailable\r\n  generateFallbackExercises(sectionData, chapterMetadata) {\r\n    const fallbackExercises = [\r\n      {\r\n        type: \"Practice Problem\",\r\n        problem: `Solve problems related to ${sectionData.title}`,\r\n        difficulty: \"Basic\",\r\n        skillTargeted: \"Understanding basic concepts\",\r\n        hint: \"Review the key concepts in this section\",\r\n      },\r\n      {\r\n        type: \"Application\",\r\n        problem: `Apply the concepts from ${sectionData.title} to solve real-world problems`,\r\n        difficulty: \"Intermediate\",\r\n        skillTargeted: \"Practical application\",\r\n        hint: \"Connect the theory to practical situations\",\r\n      },\r\n      {\r\n        type: \"Problem Solving\",\r\n        problem: `Create and solve advanced problems using ${sectionData.title}`,\r\n        difficulty: \"Advanced\",\r\n        skillTargeted: \"Critical thinking and problem solving\",\r\n        hint: \"Combine multiple concepts for complex solutions\",\r\n      },\r\n    ];\r\n\r\n    return JSON.stringify(fallbackExercises);\r\n  }\r\n\r\n  // Validate AI response\r\n  isResponseValid(response) {\r\n    try {\r\n      const parsed = JSON.parse(response);\r\n      return Array.isArray(parsed) && parsed.length > 0;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = AIService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}