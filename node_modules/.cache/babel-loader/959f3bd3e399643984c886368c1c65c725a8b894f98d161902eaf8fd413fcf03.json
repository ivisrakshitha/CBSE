{"ast":null,"code":"import TypewriterText from './TypewriterText.vue';\nimport AIService from '../services/AIService.js';\nexport default {\n  name: 'AIExercises',\n  components: {\n    TypewriterText\n  },\n  props: {\n    sectionData: {\n      type: Object,\n      required: true\n    },\n    chapterMetadata: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      exercises: [],\n      isLoading: false,\n      error: null,\n      aiService: new AIService()\n    };\n  },\n  methods: {\n    async generateExercises() {\n      this.isLoading = true;\n      this.error = null;\n      try {\n        const response = await this.aiService.generateExercises(this.sectionData, this.chapterMetadata);\n        if (response.content) {\n          const parsedExercises = JSON.parse(response.content);\n          this.exercises = parsedExercises;\n        } else {\n          throw new Error('No exercises generated');\n        }\n      } catch (error) {\n        console.error('Error generating exercises:', error);\n        this.error = 'Failed to generate exercises. Please try again.';\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["TypewriterText","AIService","name","components","props","sectionData","type","Object","required","chapterMetadata","data","exercises","isLoading","error","aiService","methods","generateExercises","response","content","parsedExercises","JSON","parse","Error","console"],"sources":["F:\\IVIS_PROJECTS\\2025\\JULY\\cbse\\src\\components\\AIExercises.vue"],"sourcesContent":["<!-- src/components/AIExercises.vue -->\r\n<template>\r\n    <div class=\"ai-exercises\">\r\n        <div class=\"exercises-header\">\r\n            <h3>AI Generated Exercises</h3>\r\n            <button @click=\"generateExercises\" :disabled=\"isLoading\" class=\"generate-btn\">\r\n                {{ isLoading ? 'Generating...' : 'Generate New Exercises' }}\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Loading State -->\r\n        <div v-if=\"isLoading\" class=\"loading-exercises\">\r\n            <div class=\"spinner\"></div>\r\n            <p>AI is generating exercises for this section...</p>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div v-else-if=\"error\" class=\"error-exercises\">\r\n            <div class=\"error-icon\">!</div>\r\n            <p>{{ error }}</p>\r\n            <button @click=\"generateExercises\" class=\"retry-btn\">Try Again</button>\r\n        </div>\r\n\r\n        <!-- Generated Exercises -->\r\n        <div v-else-if=\"exercises.length > 0\" class=\"exercises-list\">\r\n            <div v-for=\"(exercise, index) in exercises\" :key=\"index\" class=\"exercise-item\">\r\n                <div class=\"exercise-header\">\r\n                    <span class=\"exercise-type\">{{ exercise.type }}</span>\r\n                    <span class=\"exercise-difficulty\" :class=\"'difficulty-' + exercise.difficulty.toLowerCase()\">\r\n                        {{ exercise.difficulty }}\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"exercise-problem\">\r\n                    <TypewriterText :text=\"exercise.problem\"></TypewriterText>\r\n                </div>\r\n\r\n                <div v-if=\"exercise.skillTargeted\" class=\"exercise-skill\">\r\n                    <strong>Skill Targeted:</strong> {{ exercise.skillTargeted }}\r\n                </div>\r\n\r\n                <div v-if=\"exercise.hint\" class=\"exercise-hint\">\r\n                    <strong>Hint:</strong> {{ exercise.hint }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- No exercises generated yet -->\r\n        <div v-else class=\"no-exercises\">\r\n            <p>Click \"Generate New Exercises\" to create AI-powered exercises for this section.</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TypewriterText from './TypewriterText.vue'\r\nimport AIService from '../services/AIService.js'\r\n\r\nexport default {\r\n    name: 'AIExercises',\r\n    components: {\r\n        TypewriterText\r\n    },\r\n    props: {\r\n        sectionData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        chapterMetadata: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            exercises: [],\r\n            isLoading: false,\r\n            error: null,\r\n            aiService: new AIService()\r\n        }\r\n    },\r\n    methods: {\r\n        async generateExercises() {\r\n            this.isLoading = true;\r\n            this.error = null;\r\n\r\n            try {\r\n                const response = await this.aiService.generateExercises(\r\n                    this.sectionData,\r\n                    this.chapterMetadata\r\n                );\r\n\r\n                if (response.content) {\r\n                    const parsedExercises = JSON.parse(response.content);\r\n                    this.exercises = parsedExercises;\r\n                } else {\r\n                    throw new Error('No exercises generated');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error generating exercises:', error);\r\n                this.error = 'Failed to generate exercises. Please try again.';\r\n            } finally {\r\n                this.isLoading = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AAuDA,OAAOA,cAAa,MAAO,sBAAqB;AAChD,OAAOC,SAAQ,MAAO,0BAAyB;AAE/C,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACRH;EACJ,CAAC;EACDI,KAAK,EAAE;IACHC,WAAW,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,eAAe,EAAE;MACbH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAIb,SAAS,CAAC;IAC7B;EACJ,CAAC;EACDc,OAAO,EAAE;IACL,MAAMC,iBAAiBA,CAAA,EAAG;MACtB,IAAI,CAACJ,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,KAAI,GAAI,IAAI;MAEjB,IAAI;QACA,MAAMI,QAAO,GAAI,MAAM,IAAI,CAACH,SAAS,CAACE,iBAAiB,CACnD,IAAI,CAACX,WAAW,EAChB,IAAI,CAACI,eACT,CAAC;QAED,IAAIQ,QAAQ,CAACC,OAAO,EAAE;UAClB,MAAMC,eAAc,GAAIC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACC,OAAO,CAAC;UACpD,IAAI,CAACP,SAAQ,GAAIQ,eAAe;QACpC,OAAO;UACH,MAAM,IAAIG,KAAK,CAAC,wBAAwB,CAAC;QAC7C;MACJ,EAAE,OAAOT,KAAK,EAAE;QACZU,OAAO,CAACV,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAI,CAACA,KAAI,GAAI,iDAAiD;MAClE,UAAU;QACN,IAAI,CAACD,SAAQ,GAAI,KAAK;MAC1B;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}