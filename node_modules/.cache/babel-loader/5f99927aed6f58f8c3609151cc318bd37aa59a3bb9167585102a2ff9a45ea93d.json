{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, renderList as _renderList, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ai-exercises\"\n};\nconst _hoisted_2 = {\n  class: \"exercises-header\"\n};\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-exercises\"\n};\nconst _hoisted_5 = {\n  class: \"error-exercises\"\n};\nconst _hoisted_6 = {\n  class: \"exercises-list\"\n};\nconst _hoisted_7 = {\n  class: \"exercise-header\"\n};\nconst _hoisted_8 = {\n  class: \"exercise-type\"\n};\nconst _hoisted_9 = {\n  class: \"exercise-problem\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"exercise-skill\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"exercise-hint\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TypewriterText = _resolveComponent(\"TypewriterText\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"AI Generated Exercises\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.generateExercises && $options.generateExercises(...args)),\n    disabled: $data.isLoading,\n    class: \"generate-btn\"\n  }, _toDisplayString($data.isLoading ? 'Generating...' : 'Generate New Exercises'), 9 /* TEXT, PROPS */, _hoisted_3)]), _createCommentVNode(\" Loading State \"), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[3] || (_cache[3] = [_createElementVNode(\"div\", {\n    class: \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"AI is generating exercises for this section...\", -1 /* HOISTED */)]))) : $data.error ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Error State \"), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"error-icon\"\n  }, \"!\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.error), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.generateExercises && $options.generateExercises(...args)),\n    class: \"retry-btn\"\n  }, \"Try Again\")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : $data.exercises.length > 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createCommentVNode(\" Generated Exercises \"), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.exercises, (exercise, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"exercise-item\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(exercise.type), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: _normalizeClass([\"exercise-difficulty\", 'difficulty-' + exercise.difficulty.toLowerCase()])\n    }, _toDisplayString(exercise.difficulty), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_TypewriterText, {\n      text: exercise.problem\n    }, null, 8 /* PROPS */, [\"text\"])]), exercise.skillTargeted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Skill Targeted:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(exercise.skillTargeted), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), exercise.hint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Hint:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(exercise.hint), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createCommentVNode(\" No exercises generated yet \"), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"no-exercises\"\n  }, [_createElementVNode(\"p\", null, \"Click \\\"Generate New Exercises\\\" to create AI-powered exercises for this section.\")], -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","generateExercises","disabled","$data","isLoading","_hoisted_3","_createCommentVNode","_hoisted_4","error","_Fragment","_hoisted_5","_toDisplayString","exercises","length","_hoisted_6","_renderList","exercise","index","_hoisted_7","_hoisted_8","type","_normalizeClass","difficulty","toLowerCase","_hoisted_9","_createVNode","_component_TypewriterText","text","problem","skillTargeted","_hoisted_10","_createTextVNode","hint","_hoisted_11"],"sources":["F:\\IVIS_PROJECTS\\2025\\JULY\\cbse\\src\\components\\AIExercises.vue"],"sourcesContent":["<!-- src/components/AIExercises.vue -->\r\n<template>\r\n    <div class=\"ai-exercises\">\r\n        <div class=\"exercises-header\">\r\n            <h3>AI Generated Exercises</h3>\r\n            <button @click=\"generateExercises\" :disabled=\"isLoading\" class=\"generate-btn\">\r\n                {{ isLoading ? 'Generating...' : 'Generate New Exercises' }}\r\n            </button>\r\n        </div>\r\n\r\n        <!-- Loading State -->\r\n        <div v-if=\"isLoading\" class=\"loading-exercises\">\r\n            <div class=\"spinner\"></div>\r\n            <p>AI is generating exercises for this section...</p>\r\n        </div>\r\n\r\n        <!-- Error State -->\r\n        <div v-else-if=\"error\" class=\"error-exercises\">\r\n            <div class=\"error-icon\">!</div>\r\n            <p>{{ error }}</p>\r\n            <button @click=\"generateExercises\" class=\"retry-btn\">Try Again</button>\r\n        </div>\r\n\r\n        <!-- Generated Exercises -->\r\n        <div v-else-if=\"exercises.length > 0\" class=\"exercises-list\">\r\n            <div v-for=\"(exercise, index) in exercises\" :key=\"index\" class=\"exercise-item\">\r\n                <div class=\"exercise-header\">\r\n                    <span class=\"exercise-type\">{{ exercise.type }}</span>\r\n                    <span class=\"exercise-difficulty\" :class=\"'difficulty-' + exercise.difficulty.toLowerCase()\">\r\n                        {{ exercise.difficulty }}\r\n                    </span>\r\n                </div>\r\n\r\n                <div class=\"exercise-problem\">\r\n                    <TypewriterText :text=\"exercise.problem\"></TypewriterText>\r\n                </div>\r\n\r\n                <div v-if=\"exercise.skillTargeted\" class=\"exercise-skill\">\r\n                    <strong>Skill Targeted:</strong> {{ exercise.skillTargeted }}\r\n                </div>\r\n\r\n                <div v-if=\"exercise.hint\" class=\"exercise-hint\">\r\n                    <strong>Hint:</strong> {{ exercise.hint }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- No exercises generated yet -->\r\n        <div v-else class=\"no-exercises\">\r\n            <p>Click \"Generate New Exercises\" to create AI-powered exercises for this section.</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TypewriterText from './TypewriterText.vue'\r\nimport AIService from '../services/AIService.js'\r\n\r\nexport default {\r\n    name: 'AIExercises',\r\n    components: {\r\n        TypewriterText\r\n    },\r\n    props: {\r\n        sectionData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        chapterMetadata: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            exercises: [],\r\n            isLoading: false,\r\n            error: null,\r\n            aiService: new AIService()\r\n        }\r\n    },\r\n    methods: {\r\n        async generateExercises() {\r\n            this.isLoading = true;\r\n            this.error = null;\r\n\r\n            try {\r\n                const response = await this.aiService.generateExercises(\r\n                    this.sectionData,\r\n                    this.chapterMetadata\r\n                );\r\n\r\n                if (response.content) {\r\n                    const parsedExercises = JSON.parse(response.content);\r\n                    this.exercises = parsedExercises;\r\n                } else {\r\n                    throw new Error('No exercises generated');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error generating exercises:', error);\r\n                this.error = 'Failed to generate exercises. Please try again.';\r\n            } finally {\r\n                this.isLoading = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}