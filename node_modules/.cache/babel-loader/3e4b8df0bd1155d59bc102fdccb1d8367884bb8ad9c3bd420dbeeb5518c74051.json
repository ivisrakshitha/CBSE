{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"typewriter-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"cursor\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lines, (line, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['typewriter-line', {\n        'visible': index < $data.currentLineIndex || index === $data.currentLineIndex && $data.currentCharIndex >= line.length\n      }])\n    }, [index < $data.currentLineIndex ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(line), 1 /* TEXT */)) : index === $data.currentLineIndex ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(line.substring(0, $data.currentCharIndex)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), index === $data.currentLineIndex && $data.currentCharIndex < line.length ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"|\")) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","lines","line","index","_normalizeClass","$data","currentLineIndex","currentCharIndex","length","_hoisted_2","_toDisplayString","_hoisted_3","substring","_createCommentVNode","_hoisted_4"],"sources":["F:\\IVIS_PROJECTS\\2025\\JULY\\cbse\\src\\components\\TypewriterText.vue"],"sourcesContent":["<!-- src/components/TypewriterText.vue -->\r\n<template>\r\n  <div class=\"typewriter-container\">\r\n    <div v-for=\"(line, index) in lines\" :key=\"index\"\r\n      :class=\"['typewriter-line', { 'visible': index < currentLineIndex || (index === currentLineIndex && currentCharIndex >= line.length) }]\">\r\n      <span v-if=\"index < currentLineIndex\">{{ line }}</span>\r\n      <span v-else-if=\"index === currentLineIndex\">{{ line.substring(0, currentCharIndex) }}</span>\r\n      <span v-if=\"index === currentLineIndex && currentCharIndex < line.length\" class=\"cursor\">|</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TypewriterText',\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    speed: {\r\n      type: Number,\r\n      default: 50 // milliseconds per character\r\n    },\r\n    lineDelay: {\r\n      type: Number,\r\n      default: 500 // milliseconds delay between lines\r\n    },\r\n    autoStart: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currentLineIndex: 0,\r\n      currentCharIndex: 0,\r\n      isAnimating: false,\r\n      intervalId: null\r\n    }\r\n  },\r\n  computed: {\r\n    lines() {\r\n      // Split text into lines, handling both \\n and sentence endings\r\n      return this.text\r\n        .split('/\\n|(?<=\\.)\\s+|(?<=\\!)\\s+|(?<=\\?)\\s+/')\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => line.trim());\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.autoStart) {\r\n      this.startAnimation();\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  },\r\n  methods: {\r\n    startAnimation() {\r\n      if (this.isAnimating) return;\r\n\r\n      this.isAnimating = true;\r\n      this.currentLineIndex = 0;\r\n      this.currentCharIndex = 0;\r\n\r\n      this.animateText();\r\n    },\r\n\r\n    animateText() {\r\n      if (this.currentLineIndex >= this.lines.length) {\r\n        this.isAnimating = false;\r\n        return;\r\n      }\r\n\r\n      const currentLine = this.lines[this.currentLineIndex];\r\n\r\n      if (this.currentCharIndex < currentLine.length) {\r\n        // Continue typing current line\r\n        this.currentCharIndex++;\r\n        setTimeout(() => this.animateText(), this.speed);\r\n      } else {\r\n        // Move to next line after delay\r\n        this.currentLineIndex++;\r\n        this.currentCharIndex = 0;\r\n        setTimeout(() => this.animateText(), this.lineDelay);\r\n      }\r\n    },\r\n\r\n    skipAnimation() {\r\n      this.currentLineIndex = this.lines.length - 1;\r\n      this.currentCharIndex = this.lines[this.currentLineIndex]?.length || 0;\r\n      this.isAnimating = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.typewriter-container {\r\n  display: block;\r\n  width: 100%;\r\n  line-height: 1.6;\r\n  font-family: inherit;\r\n}\r\n\r\n.typewriter-line {\r\n  display: block;\r\n  margin-bottom: 0.5em;\r\n  min-height: 1.6em;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.typewriter-line.visible {\r\n  opacity: 1;\r\n}\r\n\r\n.typewriter-line:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.cursor {\r\n  display: inline-block;\r\n  animation: blink 1s infinite;\r\n  color: #17b5b5;\r\n  font-weight: bold;\r\n}\r\n\r\n@keyframes blink {\r\n\r\n  0%,\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n\r\n  51%,\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n/* Ensure proper text wrapping */\r\n.typewriter-line {\r\n  word-wrap: break-word;\r\n  overflow-wrap: break-word;\r\n  white-space: pre-wrap;\r\n}\r\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAsB;;EAFnCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAOgFD,KAAK,EAAC;;;uBALpFE,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKME,SAAA,QARVC,WAAA,CAGiCC,QAAA,CAAAC,KAAK,EAHtC,CAGiBC,IAAI,EAAEC,KAAK;yBAAxBP,mBAAA,CAKM;MAL+BD,GAAG,EAAEQ,KAAK;MAC5CT,KAAK,EAJZU,eAAA;QAAA,WAI+CD,KAAK,GAAGE,KAAA,CAAAC,gBAAgB,IAAKH,KAAK,KAAKE,KAAA,CAAAC,gBAAgB,IAAID,KAAA,CAAAE,gBAAgB,IAAIL,IAAI,CAACM;MAAM;QACvHL,KAAK,GAAGE,KAAA,CAAAC,gBAAgB,I,cAApCV,mBAAA,CAAuD,QAL7Da,UAAA,EAAAC,gBAAA,CAK+CR,IAAI,oBAC5BC,KAAK,KAAKE,KAAA,CAAAC,gBAAgB,I,cAA3CV,mBAAA,CAA6F,QANnGe,UAAA,EAAAD,gBAAA,CAMsDR,IAAI,CAACU,SAAS,IAAIP,KAAA,CAAAE,gBAAgB,qBANxFM,mBAAA,gBAOkBV,KAAK,KAAKE,KAAA,CAAAC,gBAAgB,IAAID,KAAA,CAAAE,gBAAgB,GAAGL,IAAI,CAACM,MAAM,I,cAAxEZ,mBAAA,CAAiG,QAAjGkB,UAAiG,EAAR,GAAC,KAPhGD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}