{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'GoogleSearchResults',\n  props: {\n    initialQuery: {\n      type: String,\n      default: ''\n    },\n    searchContext: {\n      type: String,\n      default: ''\n    },\n    apiKey: {\n      type: String,\n      required: true\n    },\n    searchEngineId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: this.initialQuery,\n      searchResults: [],\n      currentFilter: 'all',\n      // 'all', 'images', 'videos'\n      isLoading: false,\n      error: null,\n      searchPerformed: false,\n      modalContent: {\n        image: null,\n        video: null\n      }\n    };\n  },\n  computed: {\n    filteredResults() {\n      return {\n        images: this.currentFilter === 'all' || this.currentFilter === 'images' ? this.searchResults.filter(item => item.type === 'image') : [],\n        videos: this.currentFilter === 'all' || this.currentFilter === 'videos' ? this.searchResults.filter(item => item.type === 'video') : []\n      };\n    }\n  },\n  mounted() {\n    // If there's an initial query, perform search on mount\n    if (this.initialQuery && this.initialQuery.trim() !== '') {\n      // Combine initial query with context if provided\n      this.searchQuery = this.searchContext ? `${this.initialQuery} ${this.searchContext}` : this.initialQuery;\n      this.performSearch();\n    }\n\n    // Add event listener for escape key to close modal\n    document.addEventListener('keydown', this.handleKeyDown);\n  },\n  beforeUnmount() {\n    // Remove event listener\n    document.removeEventListener('keydown', this.handleKeyDown);\n  },\n  methods: {\n    async performSearch() {\n      if (!this.searchQuery.trim()) {\n        this.error = 'Please enter a search term';\n        return;\n      }\n      this.isLoading = true;\n      this.error = null;\n      this.searchResults = [];\n      try {\n        // First, search for images\n        const imageResults = await this.searchImages();\n\n        // Then search for videos\n        const videoResults = await this.searchVideos();\n\n        // Combine results\n        this.searchResults = [...imageResults, ...videoResults];\n        this.searchPerformed = true;\n      } catch (err) {\n        console.error('Search error:', err);\n        this.error = `Error performing search: ${err.message}`;\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async searchImages() {\n      try {\n        const response = await axios.get('https://www.googleapis.com/customsearch/v1', {\n          params: {\n            key: this.apiKey,\n            cx: this.searchEngineId,\n            q: this.searchQuery,\n            searchType: 'image',\n            num: 10\n          }\n        });\n        if (!response.data.items) {\n          return [];\n        }\n        return response.data.items.map(item => ({\n          type: 'image',\n          title: item.title,\n          thumbnailUrl: item.image.thumbnailLink,\n          fullSizeUrl: item.link,\n          sourceUrl: item.image.contextLink,\n          sourceName: new URL(item.image.contextLink).hostname.replace('www.', ''),\n          description: item.snippet\n        }));\n      } catch (error) {\n        console.error('Error searching for images:', error);\n        return [];\n      }\n    },\n    async searchVideos() {\n      try {\n        // Search specifically for YouTube videos by adding \"youtube\" to the query\n        const response = await axios.get('https://www.googleapis.com/customsearch/v1', {\n          params: {\n            key: this.apiKey,\n            cx: this.searchEngineId,\n            q: `${this.searchQuery} youtube`,\n            num: 10\n          }\n        });\n        if (!response.data.items) {\n          return [];\n        }\n\n        // Filter for YouTube results and format them\n        return response.data.items.filter(item => item.link.includes('youtube.com/watch')).map(item => {\n          // Extract video ID\n          const videoId = this.getYoutubeId(item.link);\n          return {\n            type: 'video',\n            title: item.title,\n            videoUrl: item.link,\n            thumbnailUrl: `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`,\n            channelTitle: item.pagemap?.videoobject?.[0]?.channelTitle || 'YouTube',\n            description: item.snippet\n          };\n        });\n      } catch (error) {\n        console.error('Error searching for videos:', error);\n        return [];\n      }\n    },\n    setFilter(filter) {\n      this.currentFilter = filter;\n    },\n    truncateText(text, maxLength) {\n      if (!text) return '';\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    },\n    getYoutubeId(url) {\n      const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n      const match = url.match(regExp);\n      return match && match[2].length === 11 ? match[2] : null;\n    },\n    openImageModal(image) {\n      this.modalContent.image = image;\n      document.body.style.overflow = 'hidden'; // Prevent scrolling\n    },\n    openVideoModal(video) {\n      this.modalContent.video = video;\n      document.body.style.overflow = 'hidden'; // Prevent scrolling\n    },\n    closeModal() {\n      this.modalContent.image = null;\n      this.modalContent.video = null;\n      document.body.style.overflow = ''; // Restore scrolling\n    },\n    handleKeyDown(e) {\n      if (e.key === 'Escape') {\n        this.closeModal();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","initialQuery","type","String","default","searchContext","apiKey","required","searchEngineId","data","searchQuery","searchResults","currentFilter","isLoading","error","searchPerformed","modalContent","image","video","computed","filteredResults","images","filter","item","videos","mounted","trim","performSearch","document","addEventListener","handleKeyDown","beforeUnmount","removeEventListener","methods","imageResults","searchImages","videoResults","searchVideos","err","console","message","response","get","params","key","cx","q","searchType","num","items","map","title","thumbnailUrl","thumbnailLink","fullSizeUrl","link","sourceUrl","contextLink","sourceName","URL","hostname","replace","description","snippet","includes","videoId","getYoutubeId","videoUrl","channelTitle","pagemap","videoobject","setFilter","truncateText","text","maxLength","length","substring","url","regExp","match","openImageModal","body","style","overflow","openVideoModal","closeModal","e"],"sources":["/home/johnaic-admin/IVIS LABS/CBSE/cbse/src/components/GoogleSearchResults.vue"],"sourcesContent":["<!-- src/components/GoogleSearchResults.vue -->\n<template>\n    <div class=\"google-search-results\">\n      <div class=\"search-container\">\n        <div class=\"search-input-container\">\n          <input \n            v-model=\"searchQuery\" \n            @keyup.enter=\"performSearch\"\n            type=\"text\" \n            placeholder=\"Search for related content...\"\n            class=\"search-input\"\n          />\n          <button @click=\"performSearch\" class=\"search-button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n              <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n            </svg>\n          </button>\n        </div>\n        \n        <div class=\"search-filters\">\n          <button \n            @click=\"setFilter('all')\" \n            :class=\"{ active: currentFilter === 'all' }\"\n          >All</button>\n          <button \n            @click=\"setFilter('images')\" \n            :class=\"{ active: currentFilter === 'images' }\"\n          >Images</button>\n          <button \n            @click=\"setFilter('videos')\" \n            :class=\"{ active: currentFilter === 'videos' }\"\n          >Videos</button>\n        </div>\n      </div>\n      \n      <div v-if=\"isLoading\" class=\"loading-state\">\n        <div class=\"spinner\"></div>\n        <p>Searching for content...</p>\n      </div>\n      \n      <div v-else-if=\"error\" class=\"error-state\">\n        <p>{{ error }}</p>\n      </div>\n      \n      <div v-else-if=\"searchResults.length === 0 && searchPerformed\" class=\"no-results\">\n        <p>No results found for \"{{ searchQuery }}\". Try a different search term.</p>\n      </div>\n      \n      <div v-else-if=\"searchPerformed\" class=\"results-container\">\n        <!-- Images Results -->\n        <div v-if=\"filteredResults.images.length > 0\" class=\"result-section\">\n          <h3 v-if=\"currentFilter === 'all'\">Images</h3>\n          <div class=\"image-grid\">\n            <div \n              v-for=\"(image, index) in filteredResults.images\" \n              :key=\"'img-' + index\" \n              class=\"image-card\"\n              @click=\"openImageModal(image)\"\n            >\n              <div class=\"image-card-inner\">\n                <img :src=\"image.thumbnailUrl\" :alt=\"image.title\" class=\"thumbnail\" />\n                <div class=\"image-card-title\">{{ truncateText(image.title, 50) }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Videos Results -->\n        <div v-if=\"filteredResults.videos.length > 0\" class=\"result-section\">\n          <h3 v-if=\"currentFilter === 'all'\">Videos</h3>\n          <div class=\"video-grid\">\n            <div \n              v-for=\"(video, index) in filteredResults.videos\" \n              :key=\"'vid-' + index\" \n              class=\"video-card\"\n              @click=\"openVideoModal(video)\"\n            >\n              <div class=\"video-card-inner\">\n                <div class=\"thumbnail-container\">\n                  <img :src=\"video.thumbnailUrl\" :alt=\"video.title\" class=\"thumbnail\" />\n                  <div class=\"play-icon\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"white\">\n                      <path d=\"M8 5v14l11-7z\"/>\n                    </svg>\n                  </div>\n                </div>\n                <div class=\"video-card-info\">\n                  <div class=\"video-card-title\">{{ truncateText(video.title, 70) }}</div>\n                  <div class=\"video-card-channel\">{{ video.channelTitle }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Image Modal -->\n      <div class=\"modal\" v-if=\"modalContent.image\" @click=\"closeModal\">\n        <div class=\"modal-content image-modal-content\" @click.stop>\n          <div class=\"modal-header\">\n            <h3>{{ modalContent.image.title }}</h3>\n            <button class=\"close-button\" @click=\"closeModal\">×</button>\n          </div>\n          <div class=\"modal-body\">\n            <img :src=\"modalContent.image.fullSizeUrl || modalContent.image.thumbnailUrl\" :alt=\"modalContent.image.title\" class=\"full-size-image\" />\n            <div class=\"image-details\">\n              <p v-if=\"modalContent.image.description\">{{ modalContent.image.description }}</p>\n              <p class=\"image-source\">Source: <a :href=\"modalContent.image.sourceUrl\" target=\"_blank\">{{ modalContent.image.sourceName }}</a></p>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <a :href=\"modalContent.image.sourceUrl\" target=\"_blank\" class=\"source-link\">Visit Source</a>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Video Modal -->\n      <div class=\"modal\" v-if=\"modalContent.video\" @click=\"closeModal\">\n        <div class=\"modal-content video-modal-content\" @click.stop>\n          <div class=\"modal-header\">\n            <h3>{{ modalContent.video.title }}</h3>\n            <button class=\"close-button\" @click=\"closeModal\">×</button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"video-embed\">\n              <iframe \n                :src=\"'https://www.youtube.com/embed/' + getYoutubeId(modalContent.video.videoUrl)\" \n                frameborder=\"0\" \n                allowfullscreen\n              ></iframe>\n            </div>\n            <div class=\"video-details\">\n              <p class=\"video-channel\">{{ modalContent.video.channelTitle }}</p>\n              <p v-if=\"modalContent.video.description\">{{ modalContent.video.description }}</p>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <a :href=\"modalContent.video.videoUrl\" target=\"_blank\" class=\"source-link\">Watch on YouTube</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'GoogleSearchResults',\n    props: {\n      initialQuery: {\n        type: String,\n        default: ''\n      },\n      searchContext: {\n        type: String,\n        default: ''\n      },\n      apiKey: {\n        type: String,\n        required: true\n      },\n      searchEngineId: {\n        type: String,\n        required: true\n      }\n    },\n    data() {\n      return {\n        searchQuery: this.initialQuery,\n        searchResults: [],\n        currentFilter: 'all', // 'all', 'images', 'videos'\n        isLoading: false,\n        error: null,\n        searchPerformed: false,\n        modalContent: {\n          image: null,\n          video: null\n        }\n      }\n    },\n    computed: {\n      filteredResults() {\n        return {\n          images: this.currentFilter === 'all' || this.currentFilter === 'images' \n            ? this.searchResults.filter(item => item.type === 'image')\n            : [],\n          videos: this.currentFilter === 'all' || this.currentFilter === 'videos'\n            ? this.searchResults.filter(item => item.type === 'video')\n            : []\n        }\n      }\n    },\n    mounted() {\n      // If there's an initial query, perform search on mount\n      if (this.initialQuery && this.initialQuery.trim() !== '') {\n        // Combine initial query with context if provided\n        this.searchQuery = this.searchContext \n          ? `${this.initialQuery} ${this.searchContext}` \n          : this.initialQuery;\n        this.performSearch();\n      }\n      \n      // Add event listener for escape key to close modal\n      document.addEventListener('keydown', this.handleKeyDown);\n    },\n    beforeUnmount() {\n      // Remove event listener\n      document.removeEventListener('keydown', this.handleKeyDown);\n    },\n    methods: {\n      async performSearch() {\n        if (!this.searchQuery.trim()) {\n          this.error = 'Please enter a search term';\n          return;\n        }\n        \n        this.isLoading = true;\n        this.error = null;\n        this.searchResults = [];\n        \n        try {\n          // First, search for images\n          const imageResults = await this.searchImages();\n          \n          // Then search for videos\n          const videoResults = await this.searchVideos();\n          \n          // Combine results\n          this.searchResults = [...imageResults, ...videoResults];\n          this.searchPerformed = true;\n        } catch (err) {\n          console.error('Search error:', err);\n          this.error = `Error performing search: ${err.message}`;\n        } finally {\n          this.isLoading = false;\n        }\n      },\n      \n      async searchImages() {\n        try {\n          const response = await axios.get('https://www.googleapis.com/customsearch/v1', {\n            params: {\n              key: this.apiKey,\n              cx: this.searchEngineId,\n              q: this.searchQuery,\n              searchType: 'image',\n              num: 10\n            }\n          });\n          \n          if (!response.data.items) {\n            return [];\n          }\n          \n          return response.data.items.map(item => ({\n            type: 'image',\n            title: item.title,\n            thumbnailUrl: item.image.thumbnailLink,\n            fullSizeUrl: item.link,\n            sourceUrl: item.image.contextLink,\n            sourceName: new URL(item.image.contextLink).hostname.replace('www.', ''),\n            description: item.snippet\n          }));\n        } catch (error) {\n          console.error('Error searching for images:', error);\n          return [];\n        }\n      },\n      \n      async searchVideos() {\n        try {\n          // Search specifically for YouTube videos by adding \"youtube\" to the query\n          const response = await axios.get('https://www.googleapis.com/customsearch/v1', {\n            params: {\n              key: this.apiKey,\n              cx: this.searchEngineId,\n              q: `${this.searchQuery} youtube`,\n              num: 10\n            }\n          });\n          \n          if (!response.data.items) {\n            return [];\n          }\n          \n          // Filter for YouTube results and format them\n          return response.data.items\n            .filter(item => item.link.includes('youtube.com/watch'))\n            .map(item => {\n              // Extract video ID\n              const videoId = this.getYoutubeId(item.link);\n              \n              return {\n                type: 'video',\n                title: item.title,\n                videoUrl: item.link,\n                thumbnailUrl: `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`,\n                channelTitle: item.pagemap?.videoobject?.[0]?.channelTitle || 'YouTube',\n                description: item.snippet\n              };\n            });\n        } catch (error) {\n          console.error('Error searching for videos:', error);\n          return [];\n        }\n      },\n      \n      setFilter(filter) {\n        this.currentFilter = filter;\n      },\n      \n      truncateText(text, maxLength) {\n        if (!text) return '';\n        return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n      },\n      \n      getYoutubeId(url) {\n        const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n        const match = url.match(regExp);\n        return (match && match[2].length === 11) ? match[2] : null;\n      },\n      \n      openImageModal(image) {\n        this.modalContent.image = image;\n        document.body.style.overflow = 'hidden'; // Prevent scrolling\n      },\n      \n      openVideoModal(video) {\n        this.modalContent.video = video;\n        document.body.style.overflow = 'hidden'; // Prevent scrolling\n      },\n      \n      closeModal() {\n        this.modalContent.image = null;\n        this.modalContent.video = null;\n        document.body.style.overflow = ''; // Restore scrolling\n      },\n      \n      handleKeyDown(e) {\n        if (e.key === 'Escape') {\n          this.closeModal();\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .google-search-results {\n    margin-bottom: 40px;\n    color: #e0e0e0;\n  }\n  \n  .search-container {\n    margin-bottom: 20px;\n  }\n  \n  .search-input-container {\n    display: flex;\n    margin-bottom: 10px;\n  }\n  \n  .search-input {\n    flex: 1;\n    padding: 12px 16px;\n    font-size: 1rem;\n    border: 1px solid #2c2c2c;\n    border-radius: 8px 0 0 8px;\n    background-color: #252525;\n    color: #e0e0e0;\n  }\n  \n  .search-button {\n    padding: 0 18px;\n    background-color: #17b5b5;\n    color: #121212;\n    border: none;\n    border-radius: 0 8px 8px 0;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: background-color 0.2s;\n  }\n  \n  .search-button:hover {\n    background-color: #1ec7c7;\n  }\n  \n  .search-filters {\n    display: flex;\n    gap: 10px;\n  }\n  \n  .search-filters button {\n    padding: 8px 16px;\n    background-color: #1e1e1e;\n    color: #b0b0b0;\n    border: 1px solid #2c2c2c;\n    border-radius: 6px;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n  \n  .search-filters button.active,\n  .search-filters button:hover {\n    background-color: #252525;\n    color: #17b5b5;\n    border-color: #17b5b5;\n  }\n  \n  .loading-state, .error-state, .no-results {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 200px;\n    text-align: center;\n    color: #b0b0b0;\n  }\n  \n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 4px solid rgba(23, 181, 181, 0.1);\n    border-left-color: #17b5b5;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 15px;\n  }\n  \n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  \n  .error-state {\n    color: #f44336;\n  }\n  \n  .result-section {\n    margin-bottom: 30px;\n  }\n  \n  .result-section h3 {\n    font-size: 1.3rem;\n    color: #17b5b5;\n    margin-bottom: 15px;\n    border-bottom: 1px solid #2c2c2c;\n    padding-bottom: 8px;\n  }\n  \n  /* Image grid */\n  .image-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n    gap: 15px;\n  }\n  \n  .image-card {\n    background-color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    transition: transform 0.2s, box-shadow 0.2s;\n    cursor: pointer;\n    height: 100%;\n  }\n  \n  .image-card:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n  \n  .image-card-inner {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n  \n  .image-card img.thumbnail {\n    width: 100%;\n    height: 120px;\n    object-fit: cover;\n  }\n  \n  .image-card-title {\n    padding: 10px;\n    font-size: 0.9rem;\n    flex: 1;\n  }\n  \n  /* Video grid */\n  .video-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    gap: 20px;\n  }\n  \n  .video-card {\n    background-color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    transition: transform 0.2s, box-shadow 0.2s;\n    cursor: pointer;\n    height: 100%;\n  }\n  \n  .video-card:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n  \n  .video-card-inner {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n  \n  .thumbnail-container {\n    position: relative;\n  }\n  \n  .video-card img.thumbnail {\n    width: 100%;\n    height: 158px;\n    object-fit: cover;\n  }\n  \n  .play-icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0.8;\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: opacity 0.2s, background-color 0.2s;\n  }\n  \n  .video-card:hover .play-icon {\n    opacity: 1;\n    background-color: rgba(23, 181, 181, 0.7);\n  }\n  \n  .video-card-info {\n    padding: 12px;\n    flex: 1;\n  }\n  \n  .video-card-title {\n    font-size: 0.95rem;\n    margin-bottom: 8px;\n    font-weight: 500;\n  }\n  \n  .video-card-channel {\n    font-size: 0.8rem;\n    color: #b0b0b0;\n  }\n  \n  /* Modal styles */\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n    padding: 20px;\n  }\n  \n  .modal-content {\n    background-color: #1e1e1e;\n    border-radius: 12px;\n    width: 90%;\n    max-width: 900px;\n    max-height: 90vh;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .modal-header {\n    padding: 15px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid #2c2c2c;\n  }\n  \n  .modal-header h3 {\n    margin: 0;\n    font-size: 1.25rem;\n    color: #17b5b5;\n  }\n  \n  .close-button {\n    background: none;\n    border: none;\n    color: #b0b0b0;\n    font-size: 1.5rem;\n    cursor: pointer;\n    padding: 0;\n    line-height: 1;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    transition: background-color 0.2s, color 0.2s;\n  }\n  \n  .close-button:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n    color: #fff;\n  }\n  \n  .modal-body {\n    padding: 20px;\n    overflow-y: auto;\n    flex: 1;\n  }\n  \n  .full-size-image {\n    max-width: 100%;\n    max-height: 60vh;\n    display: block;\n    margin: 0 auto 20px;\n    border-radius: 8px;\n  }\n  \n  .image-details, .video-details {\n    color: #d0d0d0;\n    line-height: 1.5;\n  }\n  \n  .image-source {\n    margin-top: 15px;\n    font-size: 0.9rem;\n    color: #b0b0b0;\n  }\n  \n  .image-source a {\n    color: #17b5b5;\n    text-decoration: none;\n  }\n  \n  .image-source a:hover {\n    text-decoration: underline;\n  }\n  \n  .video-embed {\n    position: relative;\n    padding-bottom: 56.25%; /* 16:9 ratio */\n    height: 0;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .video-embed iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n  }\n  \n  .video-channel {\n    font-weight: 500;\n    color: #17b5b5;\n    margin-bottom: 10px;\n  }\n  \n  .modal-footer {\n    padding: 15px 20px;\n    display: flex;\n    justify-content: flex-end;\n    border-top: 1px solid #2c2c2c;\n  }\n  \n  .source-link {\n    padding: 8px 16px;\n    background-color: #17b5b5;\n    color: #121212;\n    text-decoration: none;\n    border-radius: 6px;\n    font-weight: 500;\n    transition: background-color 0.2s;\n  }\n  \n  .source-link:hover {\n    background-color: #1ec7c7;\n  }\n  \n  @media (max-width: 768px) {\n    .image-grid {\n      grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    }\n    \n    .video-grid {\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n    }\n    \n    .modal-content {\n      width: 95%;\n    }\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}